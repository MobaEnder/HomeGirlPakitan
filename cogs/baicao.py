import discord
from discord import app_commands
from discord.ext import commands
import random, asyncio, time

from utils.data import get_user, save_data, DATA


ROOMS = {}  # L∆∞u ph√≤ng t·∫°m trong RAM


def tinh_diem(ba):
    """T√≠nh ƒëi·ªÉm b√†i c√†o (3 l√°, m·ªói l√° 1-10 ƒëi·ªÉm)"""
    return sum(ba) % 10


class JoinButton(discord.ui.View):
    def __init__(self, room_id: str):
        super().__init__(timeout=None)
        self.room_id = room_id

    @discord.ui.button(label="üé¥ Tham gia", style=discord.ButtonStyle.green)
    async def join(self, interaction: discord.Interaction, button: discord.ui.Button):
        user_id = interaction.user.id
        user_data = get_user(DATA, user_id)

        if self.room_id not in ROOMS:
            return await interaction.response.send_message("‚ùå Ph√≤ng kh√¥ng t·ªìn t·∫°i!", ephemeral=True)

        room = ROOMS[self.room_id]

        if room["started"]:
            return await interaction.response.send_message("‚ùå Ph√≤ng ƒë√£ b·∫Øt ƒë·∫ßu!", ephemeral=True)

        if user_id in room["players"]:
            return await interaction.response.send_message("‚ùå B·∫°n ƒë√£ tham gia r·ªìi!", ephemeral=True)

        if len(room["players"]) >= room["so_nguoi"]:
            return await interaction.response.send_message("‚ùå Ph√≤ng ƒë√£ ƒë·ªß ng∆∞·ªùi!", ephemeral=True)

        # check ti·ªÅn c∆∞·ª£c
        if user_data["money"] < room["cuoc"]:
            return await interaction.response.send_message("‚ùå B·∫°n kh√¥ng ƒë·ªß ti·ªÅn ƒë·ªÉ tham gia!", ephemeral=True)

        room["players"].append(user_id)
        await interaction.response.send_message(f"‚úÖ {interaction.user.mention} ƒë√£ tham gia ph√≤ng {self.room_id}")

        # N·∫øu ƒë·ªß ng∆∞·ªùi ‚Üí b·∫Øt ƒë·∫ßu
        if len(room["players"]) == room["so_nguoi"]:
            room["started"] = True
            await start_game(interaction, self.room_id)


async def start_game(interaction: discord.Interaction, room_id: str):
    room = ROOMS[room_id]
    players = room["players"]
    cuoc = room["cuoc"]

    # Tr·ª´ ti·ªÅn c∆∞·ª£c c·ªßa t·∫•t c·∫£
    for uid in players:
        get_user(DATA, uid)["money"] -= cuoc
    save_data()

    # G·ª≠i embed ban ƒë·∫ßu
    embed = discord.Embed(
        title=f"üé¥ Ph√≤ng {room_id} ƒë√£ ƒë·ªß ng∆∞·ªùi!",
        description=f"Tr√≤ ch∆°i s·∫Ω b·∫Øt ƒë·∫ßu sau **7** gi√¢y...",
        color=discord.Color.yellow()
    )
    msg = await interaction.followup.send(embed=embed, wait=True)

    # ƒê·∫øm ng∆∞·ª£c trong c√πng 1 embed
    for i in range(7, 0, -1):
        embed.description = f"Tr√≤ ch∆°i s·∫Ω b·∫Øt ƒë·∫ßu sau **{i}** gi√¢y..."
        await msg.edit(embed=embed)
        await asyncio.sleep(1)

    # Chia b√†i & t√≠nh ƒëi·ªÉm
    ket_qua = {}
    for uid in players:
        bai = [random.randint(1, 10) for _ in range(3)]
        diem = tinh_diem(bai)
        ket_qua[uid] = {"bai": bai, "diem": diem}

    # T√¨m ng∆∞·ªùi th·∫Øng
    max_diem = max(p["diem"] for p in ket_qua.values())
    winners = [uid for uid, info in ket_qua.items() if info["diem"] == max_diem]

    # T·ªïng ti·ªÅn th·∫Øng
    tong_tien = cuoc * len(players)
    tien_moi_nguoi = tong_tien // len(winners)

    # C·ªông ti·ªÅn cho ng∆∞·ªùi th·∫Øng
    for uid in winners:
        get_user(DATA, uid)["money"] += tien_moi_nguoi
    save_data()

    # T·∫°o embed k·∫øt qu·∫£
    result_embed = discord.Embed(
        title="üé¥ K·∫øt qu·∫£ B√†i C√†o üé¥",
        color=discord.Color.green()
    )
    for uid, info in ket_qua.items():
        member = await interaction.guild.fetch_member(uid)
        result_embed.add_field(
            name=member.display_name,
            value=f"üÉè B√†i: {info['bai']} | ‚≠ê ƒêi·ªÉm: **{info['diem']}**",
            inline=False
        )

    if len(winners) == 1:
        win_member = await interaction.guild.fetch_member(winners[0])
        result_embed.add_field(
            name="üèÜ Ng∆∞·ªùi th·∫Øng",
            value=f"{win_member.mention} (+{tong_tien} xu)",
            inline=False
        )
    else:
        result_embed.add_field(
            name="ü§ù ƒê·ªìng th·∫Øng",
            value=" ".join([f"<@{uid}>" for uid in winners]) + f"\n(+{tien_moi_nguoi} xu m·ªói ng∆∞·ªùi)",
            inline=False
        )

    await msg.edit(embed=result_embed)

    # X√≥a ph√≤ng
    del ROOMS[room_id]


class BaiCao(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot

    group = app_commands.Group(name="baicao", description="üé¥ Ch∆°i b√†i c√†o")

    @group.command(name="taophong", description="üé¥ T·∫°o ph√≤ng b√†i c√†o")
    @app_commands.describe(so_nguoi="S·ªë ng∆∞·ªùi ch∆°i (2-4)", cuoc="S·ªë ti·ªÅn c∆∞·ª£c")
    async def taophong(self, interaction: discord.Interaction, so_nguoi: int, cuoc: int):
        user_id = interaction.user.id
        user_data = get_user(DATA, user_id)

        if user_data["money"] < cuoc:
            return await interaction.response.send_message("‚ùå B·∫°n kh√¥ng ƒë·ªß ti·ªÅn ƒë·ªÉ t·∫°o ph√≤ng!", ephemeral=True)

        if so_nguoi not in [2, 3, 4]:
            return await interaction.response.send_message("‚ùå Ch·ªâ ƒë∆∞·ª£c t·∫°o ph√≤ng t·ª´ 2-4 ng∆∞·ªùi!", ephemeral=True)

        room_id = str(int(time.time()))
        ROOMS[room_id] = {
            "owner": user_id,
            "so_nguoi": so_nguoi,
            "cuoc": cuoc,
            "players": [user_id],
            "started": False
        }

        view = JoinButton(room_id)
        await interaction.response.send_message(
            f"üé¥ {interaction.user.mention} ƒë√£ t·∫°o ph√≤ng **{room_id}**\n"
            f"üë• S·ªë ng∆∞·ªùi: **{so_nguoi}**\n"
            f"üí∞ Ti·ªÅn c∆∞·ª£c: **{cuoc} xu**\n"
            f"üëâ B·∫•m n√∫t b√™n d∆∞·ªõi ƒë·ªÉ tham gia!",
            view=view
        )


async def setup(bot: commands.Bot):
    await bot.add_cog(BaiCao(bot))
